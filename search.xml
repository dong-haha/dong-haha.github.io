<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Vue组件间通信方式</title>
    <url>/2022/02/23/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h2 id="Vue-组件间通信方式"><a href="#Vue-组件间通信方式" class="headerlink" title="Vue 组件间通信方式"></a>Vue 组件间通信方式</h2><h3 id="1-props"><a href="#1-props" class="headerlink" title="1. props"></a>1. <strong>props</strong></h3><blockquote>
<p>父子之间传递<br>父向子传递属性，通过属性把数据交给子组件<br>子向父传递数据，子组件通过调用父组件的行为函数，把数据当参数交给父组件</p>
</blockquote>
<p>适用对象: 父子组件之间传值<br>​</p>
<p>父组件:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>father</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">son-comp</span> <span class="attr">:fatherMsg</span>=<span class="string">&quot;fatherMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">son-comp</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> sonComp <span class="keyword">from</span> <span class="string">&#x27;./sonComponent&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">name</span>: <span class="string">&#x27;fatherComponent&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="attr">fatherMsg</span>: <span class="string">&#x27;fatherMe&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    sonComp</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>子组件:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>son</span></span><br><span class="line"><span class="xml">    &#123;&#123; fatherMsg &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>改变<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">name</span>: <span class="string">&#x27;sonComponent&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">props</span>: [<span class="string">&#x27;fatherMsg&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">change</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">this</span>.fatherMsg = <span class="string">&#x27;haha&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><em>prop还有验证，默认值等，需要用时去官网查看。</em><br><em>​</em></p>
<h3 id="2-全局事件总线"><a href="#2-全局事件总线" class="headerlink" title="2.全局事件总线"></a>2.全局事件总线</h3><blockquote>
<p>prop只能父子组件通信<br>此时我们可以借助中间人，也就是他们都可以同时看到的一个人，就是全局事件总线（所有的组件对象都能看到）<br>在接收数据的组件中，获取总线绑定事件<br>在发送数据的组件中，获取总线触发事件<br>全局事件总线说到底就是个对象，我们通常就是用vm对象作为全局事件总线使用<br>把vm对象添加到Vue原型对象 就形成全局事件总线（vm）</p>
</blockquote>
<p>功能: 实现任意组件间通信</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">目标: 实现A向B通信</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 确定全局事件总线: 将vm对象作为事件总线挂载到vue的原型对象上</span><br><span class="line">	<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">		beforeCreate () &#123;</span><br><span class="line">			Vue.prototype.$bus = <span class="built_in">this</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line"><span class="number">2.</span> A组件: 调用(分发)事件</span><br><span class="line">	<span class="built_in">this</span>.$bus.$emit(<span class="string">&#x27;xxx&#x27;</span>, data)</span><br><span class="line"><span class="number">3.</span> B组件: 绑定事件监听</span><br><span class="line">	<span class="built_in">this</span>.$bus.$on(<span class="string">&#x27;xxx&#x27;</span>, <span class="built_in">this</span>.fn)</span><br><span class="line">	</span><br><span class="line">	methods&#123;</span><br><span class="line">		fn (data) &#123;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>具体代码：<br>main.js：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建vm</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">	<span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">	<span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">	<span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		Vue.prototype.$bus = <span class="built_in">this</span> <span class="comment">//安装全局事件总线</span></span><br><span class="line">	&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>student.vue</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生性别：&#123;&#123;sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendStudentName&quot;</span>&gt;</span>把学生名给School组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="attr">name</span>:<span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="comment">// console.log(&#x27;Student&#x27;,this.x)</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="function"><span class="title">sendStudentName</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				<span class="built_in">this</span>.$bus.$emit(<span class="string">&#x27;hello&#x27;</span>,<span class="built_in">this</span>.name)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">	&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>school.vue</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">		<span class="attr">name</span>:<span class="string">&#x27;School&#x27;</span>,</span><br><span class="line">		<span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> &#123;</span><br><span class="line">				<span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span><br><span class="line">				<span class="attr">address</span>:<span class="string">&#x27;北京&#x27;</span>,</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">			<span class="comment">// console.log(&#x27;School&#x27;,this)</span></span><br><span class="line">			<span class="built_in">this</span>.$bus.$on(<span class="string">&#x27;hello&#x27;</span>,<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">				<span class="built_in">console</span>.log(<span class="string">&#x27;我是School组件，收到了数据&#x27;</span>,data)</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">			<span class="built_in">this</span>.$bus.$off(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>总结：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645537006180-c8b7dd66-9d44-4f16-864b-69bdefdc9b8d.png#clientId=udee7ddaa-f38f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=262&id=u4f8e09ce&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1084&originWidth=2678&originalType=url&ratio=1&rotation=0&showTitle=false&size=141233&status=done&style=none&taskId=ubebd39cb-7186-4520-8e84-ddce067c518&title=&width=647" alt="image.png"></p>
<blockquote>
<p>全局事件总线：<a href="https://www.cnblogs.com/fsg6/p/13520138.html">https://www.cnblogs.com/fsg6/p/13520138.html</a><br>    <a href="https://www.cnblogs.com/Listener-wy/p/14993877.html">https://www.cnblogs.com/Listener-wy/p/14993877.html</a><br>    <a href="https://blog.csdn.net/pshdhx/article/details/109291935">https://blog.csdn.net/pshdhx/article/details/109291935</a></p>
</blockquote>
<h3 id="3-vuex"><a href="#3-vuex" class="headerlink" title="3.vuex"></a>3.vuex</h3><blockquote>
<p>这是vue中用的最多的通信方式，但是比较复杂，学习成本太大。中小项目，若只有简单几个组件通信，用全局事件总线就可以了。暂时不用</p>
</blockquote>
<h3 id="4-插槽"><a href="#4-插槽" class="headerlink" title="4.插槽"></a>4.插槽</h3><p>它允许你像这样合成组件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigation-link</span> <span class="attr">url</span>=<span class="string">&quot;/profile&quot;</span>&gt;</span></span><br><span class="line">  Your Profile</span><br><span class="line"><span class="tag">&lt;/<span class="name">navigation-link</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;a</span><br><span class="line">  v-bind:href=<span class="string">&quot;url&quot;</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;nav-link&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>当组件渲染的时候，<slot></slot> 将会被替换为“Your Profile”。插槽内可以包含任何模板代码，包括 HTML：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigation-link</span> <span class="attr">url</span>=<span class="string">&quot;/profile&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加一个 Font Awesome 图标 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  Your Profile</span><br><span class="line"><span class="tag">&lt;/<span class="name">navigation-link</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽:"></a><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD">具名插槽</a>:</h4><p><slot> 元素有一个特殊的 attribute：name。这个 attribute 可以用来定义额外的插槽：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/01/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>vue中的computed和method</title>
    <url>/2022/02/21/vue%E4%B8%AD%E7%9A%84computed%E5%92%8Cmethod/</url>
    <content><![CDATA[<h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Original message: &quot;&#123;&#123; message &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Computed reversed message: &quot;&#123;&#123; reversedMessage &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#example&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="comment">// 计算属性的 getter</span></span><br><span class="line">    <span class="attr">reversedMessage</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>computed定义的方法我们是以属性的形式访问的，和data里的属性访问形式一样，</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--HTML部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;test1&quot;</span>&gt;</span>&#123;&#123;methodTest&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;test2-1&quot;</span>&gt;</span>&#123;&#123;methodTest()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;test3-1&quot;</span>&gt;</span>&#123;&#123;computedTest&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--script部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">message</span>: <span class="string">&#x27;我是消息，&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">methodTest</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">this</span>.message + <span class="string">&#x27;现在我用的是methods&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">computedTest</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">this</span>.message + <span class="string">&#x27;现在我用的是computed&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>methods定义的方法，我们必须要加上()来调用，如methodTest()</p>
<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ol>
<li>computed是<strong>属性访问</strong>，而methods是<strong>函数调用</strong></li>
<li>computed带有<strong>缓存功能</strong>，而methods不是</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>computed其实是就是<strong>属性</strong>，之所以与data区分开，只不过为了<strong>防止文本插值中逻辑过重，会导致不易维护</strong></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
  </entry>
  <entry>
    <title>test</title>
    <url>/2022/01/24/test/</url>
    <content><![CDATA[<p>测试hexo标签和分类功能</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>随笔</category>
        <category>生信</category>
        <category>Python</category>
        <category>Java</category>
        <category>生信流程分析</category>
        <category>Linux</category>
        <category>文章复现</category>
        <category>绘图</category>
        <category>分子生物学</category>
        <category>生物</category>
        <category>博客</category>
        <category>跨平台开发</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>vue模板语法</title>
    <url>/2022/02/21/vue%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h3 id="Vue模板语法有2大类："><a href="#Vue模板语法有2大类：" class="headerlink" title="Vue模板语法有2大类："></a>Vue模板语法有2大类：</h3><ol>
<li><p>插值语法：功能：用于解析标签体内容。</p>
<p> 写法：，xxx是js表达式，且可以直接读取到data中的所有属性。</p>
</li>
<li><p>指令语法：   功能：用于解析标签（包括：标签属性、标签体内容、绑定事件…..）。举例：v-bind:href=”xxx” 或 简写为 :href=”xxx”，xxx同样要写js表达式，且可以直接读取到data中的所有属性。</p>
</li>
</ol>
<p>备注：Vue中有很多的指令，且形式都是：v-????，只是拿v-bind举个例子。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;school.url&quot;</span>&gt;</span>点我去&#123;&#123;school.name&#125;&#125;学习1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;school.url&quot;</span>&gt;</span>点我去&#123;&#123;school.name&#125;&#125;学习2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">				<span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				<span class="attr">school</span>:&#123;</span></span><br><span class="line"><span class="javascript">					<span class="attr">name</span>:<span class="string">&#x27;MOOC&#x27;</span>,</span></span><br><span class="line"><span class="javascript">					<span class="attr">url</span>:<span class="string">&#x27;https://www.icourse163.org/?from=study&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				&#125;</span></span><br><span class="line"><span class="javascript">			&#125;</span></span><br><span class="line"><span class="javascript">		&#125;)</span></span><br><span class="line"><span class="javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="v-bind缩写"><a href="#v-bind缩写" class="headerlink" title="v-bind缩写"></a>v-bind缩写</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 完整语法 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="v-on-缩写"><a href="#v-on-缩写" class="headerlink" title="v-on 缩写"></a>v-on 缩写</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&lt;!-- 完整语法 --&gt;</span><br><span class="line">&lt;a v-on:click=<span class="string">&quot;doSomething&quot;</span>&gt;...&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 缩写 --&gt;</span><br><span class="line">&lt;a @click=<span class="string">&quot;doSomething&quot;</span>&gt;...&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>html属性不能使用双大括号形式绑定，只能使用v-bind等指令<br>​</p>
<hr>
<h3 id="Class-与-Style-绑定"><a href="#Class-与-Style-绑定" class="headerlink" title="Class 与 Style 绑定"></a>Class 与 Style 绑定</h3><p>在将 v-bind 用于 class 和 style 时，Vue.js 做了专门的增强。表达式结果的类型除了字符串之外，还可以是对象或数组。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;static&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123; active: isActive, &#x27;text-danger&#x27;: hasError &#125;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">hasError</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果渲染为:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>]</span><br></pre></td></tr></table></figure>


<h3 id="v-for-指令"><a href="#v-for-指令" class="headerlink" title="v-for 指令"></a>v-for 指令</h3><blockquote>
<p>我们可以用 v-for 指令基于一个数组来渲染一个列表。v-for 指令需要使用 item in items 形式的特殊语法，其中 items 是源数据数组，而 item 则是被迭代的数组元素的<strong>别名</strong>。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.message&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">items</span>: [</span><br><span class="line">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<ul>
<li>Foo</li>
<li>Bar</li>
</ul>
<blockquote>
<p>v-for：<a href="https://www.cnblogs.com/wangyfax/p/10073159.html">https://www.cnblogs.com/wangyfax/p/10073159.html</a><br>v-bind：<a href="https://www.jianshu.com/p/98dfa4c6389c">https://www.jianshu.com/p/98dfa4c6389c</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
  </entry>
  <entry>
    <title>第六七天-知识点</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E7%AC%AC%E5%85%AD%E4%B8%83%E5%A4%A9-%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />
![image.png](https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604088420-84b6313d-1c73-41ff-9e00-a758bb903a70.png#clientId=uab1da804-d582-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=281&id=u54340142&margin=%5Bobject%20Object%5D&name=image.png&originHeight=264&originWidth=553&originalType=binary&ratio=1&rotation=0&showTitle=false&size=130198&status=done&style=none&taskId=u23d861f6-2422-431f-945c-e9234c9c49b&title=&width=588.5)
> SNP:单核苷酸多态性           InDel:插入与缺失         

<h3 id="变异主要分为三大类："><a href="#变异主要分为三大类：" class="headerlink" title="变异主要分为三大类："></a>变异主要分为三大类：</h3><ol>
<li> 单核苷酸变异，（通常称为单核苷酸多态性，通俗的说法就是单个DNA碱基的不同，简称SNP）</li>
<li> 小的Indel（Insertion 和 Deletion的简），指的是在基因组的某个位置上所发生的小片段序列的插入或者删除，其长度通常在50bp以下（这个长度范围的变异可以利用Smith-Waterman 的比对算法来获得1,2）</li>
<li>大的结构性变异，这种类型比较多，包括长度在50bp以上的长片段序列的插入或者删除、染色体倒位，染色体内部或染色体之间的序列易位，拷贝数变异，以及一些形式更为复杂的变异。为了和SNP变异作区分，第2和第3类变异通常也被称为基因组结构性变异（Structural variation，简称SV）</li>
</ol>
<hr>
<pre><code>    **DNA甲基化**（DNA methylation）为DNA化学修饰的一种形式，能够在不改变DNA序列的前提下，改变遗传表现。所谓DNA甲基化是指在DNA甲基化转移酶的作用下，在基因组CpG二核苷酸的胞嘧啶5号碳位共价键结合一个甲基基团。
</code></pre>
<hr>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604113430-78665c7f-f7df-4a79-a22b-ba0278e1684c.png#clientId=uab1da804-d582-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=276&id=u7b89fe4c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=272&originWidth=519&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112683&status=done&style=none&taskId=u17f6c543-6e92-413e-a173-78be7ffa428&title=&width=527.5" alt="image.png"></p>
<blockquote>
<p>表达数据三张表： 样本信息表、表达矩阵、基因信息表。</p>
</blockquote>
<ul>
<li>样本信息表:    每一行是一个样本，每-一列是一个表型特征(临床信息、表型特征、生化指标等)，通过项目设计得到。</li>
<li>表达矩阵:       每一行是一个基因，每一-列是一 个样本，通过表达芯片、RNA-Seq 得到</li>
<li>基因信息表:     每一行是一个基因，每一-列是一一个信息，通过下载、注释得到</li>
</ul>
<hr>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604131236-8149c591-9d03-4a0f-b053-523b60c49fed.png#clientId=uab1da804-d582-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=313&id=u55560ac6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=299&originWidth=535&originalType=binary&ratio=1&rotation=0&showTitle=false&size=101965&status=done&style=none&taskId=u84df1eaf-c249-41d7-8b90-1a34b14e7ec&title=&width=560.5" alt="image.png"><br>现在多用 RNA-Seq</p>
<p>TPM、TMM<br>​</p>
<hr>
<h3 id="转录本组装"><a href="#转录本组装" class="headerlink" title="转录本组装"></a>转录本组装</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604479510-c929d422-1bfe-45bc-adda-ae6575326a56.png#clientId=uab1da804-d582-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=514&id=ucf7974f8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1027&originWidth=1850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1223242&status=done&style=none&taskId=u66dd18fd-b2c0-439d-b2b1-1b00ec41278&title=&width=925" alt="image.png"><br>​</p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
      </categories>
  </entry>
  <entry>
    <title>基因课-15天入门-第78天-主要流程</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E7%AC%AC78%E5%A4%A9-%E4%B8%BB%E8%A6%81%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h3 id="第七天流程"><a href="#第七天流程" class="headerlink" title="第七天流程"></a>第七天流程</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604790415-b3463687-a9ba-43e3-84d4-290a4c31abe1.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=529&id=ue8ee1d09&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1058&originWidth=1277&originalType=binary&ratio=1&rotation=0&showTitle=false&size=154525&status=done&style=none&taskId=uc7fdbe9a-1197-4690-b2ed-6a4288145df&title=&width=638.5" alt="image.png"></p>
<p><strong>参考序列：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604826702-ecf75544-b07e-4aef-8877-7a789c596c3a.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=162&id=u2cf98d38&margin=%5Bobject%20Object%5D&name=image.png&originHeight=315&originWidth=903&originalType=binary&ratio=1&rotation=0&showTitle=false&size=54762&status=done&style=none&taskId=u345f8dd2-c612-41a7-b160-bfc229f894f&title=&width=463.5" alt="image.png"><br><strong>目录结构：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645604919782-3d81c8b6-6442-40ba-8506-c94d856a28a2.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=173&id=u6ce8e34c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=664&originalType=binary&ratio=1&rotation=0&showTitle=false&size=29221&status=done&style=none&taskId=ub92c8b8c-8c89-4f89-8252-743c660b374&title=&width=503" alt="image.png"></p>
<h2 id="1-mapping"><a href="#1-mapping" class="headerlink" title="1.mapping"></a>1.mapping</h2><h3 id="step1：构建参考基因组"><a href="#step1：构建参考基因组" class="headerlink" title="step1：构建参考基因组"></a>step1：构建参考基因组</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hisat2-build -p 10 ../ref/genome.fasta ../ref/genome 1&gt;hisat2-build.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p><em>（注意，不能用gz文件）</em><br><em>​</em></p>
<p> 生成：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645605070901-fdf21209-8153-4bd4-9f5e-c6391a606628.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=138&id=ud39f9be2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=187&originWidth=666&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21677&status=done&style=none&taskId=u609cda99-1997-4d23-a35c-7dfe7072f22&title=&width=490" alt="image.png"></p>
<h3 id="step2：比对"><a href="#step2：比对" class="headerlink" title="step2：比对"></a>step2：比对</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hisat2 --new-summary -p 10 -x ../ref/genome -U ../data/BLO_S1_LD1.fq.gz -S </span><br><span class="line"> BLO_S1_LD1.sam --rna-strandness R 1&gt;BLO_S1_LD1.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>


<blockquote>
<p>参数： -x : 构建的参考基因组<br> -u : 单末端测序的文件 若双末端： -1 -2<br> -S： 输出文件<br> -p： 线程数<br> –new-summary： 比对结果报告用新的，和旧的tophat区别<br> –rna-strandness R：链特异性<br>​</p>
</blockquote>
<blockquote>
<p>输出： 1. sam文件</p>
<pre><code>  2. log文件 
</code></pre>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645605234644-e632f8b5-369a-4250-8c2d-2c29476a32e2.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=114&id=u669311cf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=160&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=18558&status=done&style=none&taskId=uae10236b-04cd-48bf-93e5-9c7ce6e9c8f&title=&width=564" alt="image.png"></p>
<h3 id="step3-压缩与排序"><a href="#step3-压缩与排序" class="headerlink" title="step3: 压缩与排序"></a>step3: 压缩与排序</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">samtools sort -o BLO_S1_LD1.bam BLO_S1_LD1.sam</span><br></pre></td></tr></table></figure>


<h3 id="step4：-bam-index"><a href="#step4：-bam-index" class="headerlink" title="step4： bam index"></a>step4： bam index</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">samtools index BLO_S1_LD1.bam</span><br></pre></td></tr></table></figure>


<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">批处理：</span><br><span class="line">awk &#x27;&#123;print &quot;hisat2 --new-summary -p 10 -x ../ref/genome -U &quot;$3&quot; -S &quot;$2&quot;.sam --rna-strandness R 1&gt;&quot;$2&quot;.log 2&gt;&amp;1 &quot;&#125;&#x27; ../data/samples.txt &gt; step2.1.run_hisat.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk &#x27;&#123;print &quot;samtools sort -o &quot;$2&quot;.bam &quot;$2&quot;.sam&quot;&#125;&#x27; ../data/samples.txt &gt; step3.1.sam2bam.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk &#x27;&#123;print &quot;samtools index &quot;$2&quot;.bam&quot;&#125;&#x27; ../data/samples.txt &gt; step4.1.bamindex.sh</span><br></pre></td></tr></table></figure>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="2-表达定量"><a href="#2-表达定量" class="headerlink" title="2.表达定量"></a>2.表达定量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install r-base=4.0.3</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用conda安装R包</span></span><br><span class="line">conda install bioconductor-rsubread</span><br><span class="line"></span><br><span class="line">conda install bioconductor-limma bioconductor-edger</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="不用R的subread"><a href="#不用R的subread" class="headerlink" title="不用R的subread"></a>不用R的subread</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install subread</span><br><span class="line"></span><br><span class="line">featureCounts -a ../ref/genes.gtf -o test.txt ../1.Mapping/BLO_S1_LD2.bam</span><br></pre></td></tr></table></figure>


<blockquote>
<p>#号开头的注释行,记录了运行的命令；<br>Geneid开头的行是表头，Geneid代表统计的meta-features的名称，Chr,Start,End对应染色体上的位置，Strand代表正负链，由于一个基因有多个外显子构成，所以这里的染色体位置信息有多个，和外显子个数一一对应。<br>Length 该区间的长度，最后一列的表头是你的输入文件的名称，代表的是这个meta-feature的表达量。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607486275-f8cebfbe-f13b-4e70-b384-ad09ddaf1a7c.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=252&id=u07a93f0c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=504&originWidth=1387&originalType=binary&ratio=1&rotation=0&showTitle=false&size=96305&status=done&style=none&taskId=u37dd5cd4-3a7e-4788-8d27-9145872b7eb&title=&width=693.5" alt="image.png"></p>
<p><strong>!!!  这里只有count，还需要后续分析</strong></p>
<hr>
<h4 id="用rsubread"><a href="#用rsubread" class="headerlink" title="用rsubread"></a>用rsubread</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Rscript script/run-featurecounts.R -b ../1.Mapping/BLO_S1_LD1.bam -g ../ref/genes.gtf -o BLO_S1_LD1</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607617832-f67124a4-9486-483b-9a76-675899f23f6d.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=u31e039da&margin=%5Bobject%20Object%5D&name=image.png&originHeight=455&originWidth=638&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52073&status=done&style=none&taskId=u14a73ad7-ce0e-4726-839b-cd7ff1447ab&title=&width=418" alt="image.png"><br><strong>（这里的run-featurecounts.R是基因课写好的脚本，方便分析）</strong></p>
<blockquote>
<p>用的别人写好的R脚本，可以直接计算出tpm、fpkm</p>
</blockquote>
<h2 id="3-合并矩阵"><a href="#3-合并矩阵" class="headerlink" title="3.合并矩阵"></a>3.合并矩阵</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls ../2.Quantification/*.count &gt;genes.quant_files.txt</span><br><span class="line"></span><br><span class="line">perl script/abundance_estimates_to_matrix.pl --est_method featureCounts --quant_files genes.quant_files.txt --out_prefix apple</span><br></pre></td></tr></table></figure>

<p>整合数据，并计算TMM</p>
<p>得到一下文件：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607732600-916fc292-2e6d-4681-b7b9-6d99bf8855c3.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=66&id=u35898c15&margin=%5Bobject%20Object%5D&name=image.png&originHeight=109&originWidth=585&originalType=binary&ratio=1&rotation=0&showTitle=false&size=11705&status=done&style=none&taskId=u23b6bd81-f25b-4929-9db1-383e149ebfe&title=&width=355.5" alt="image.png"><br>apple.counts.matrix<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607754265-e071d35b-2b58-40c2-9e52-e1418c968267.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=306&id=ub81ea9f4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=612&originWidth=1418&originalType=binary&ratio=1&rotation=0&showTitle=false&size=70977&status=done&style=none&taskId=u3c53f5b7-4296-48f7-a42c-158c483da0a&title=&width=709" alt="image.png"></p>
<p>apple.TMM.EXPR.matrix：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607825018-45c7b494-3c6b-4ce1-8720-3ca7d833212b.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=340&id=u0d818f4c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=680&originWidth=1479&originalType=binary&ratio=1&rotation=0&showTitle=false&size=140417&status=done&style=none&taskId=ub7498f6c-d8b3-45fa-baac-7d421b6b862&title=&width=739.5" alt="image.png"></p>
<p>apple.TPM.not_cross_norm.TMM_info.txt：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645607847527-0c87e86b-e8a0-4b92-b17c-1a087dc52a87.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=289&id=ub2336941&margin=%5Bobject%20Object%5D&name=image.png&originHeight=577&originWidth=782&originalType=binary&ratio=1&rotation=0&showTitle=false&size=82807&status=done&style=none&taskId=udbce9005-6835-451b-8df5-c31bbbe0ea9&title=&width=391" alt="image.png"></p>
<h2 id="4-差异表达分析"><a href="#4-差异表达分析" class="headerlink" title="4.差异表达分析"></a>4.差异表达分析</h2><p>做火山图用的数据）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install trinity </span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>（注意R包被污染），可能安装后，输入R后，出错。</strong></p>
</blockquote>
<p><strong>​</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">perl ~/miniconda3/opt/trinity-2.1.1/Analysis/DifferentialExpression/run_DE_analysis.pl \</span><br><span class="line"> --matrix ../3.Merge_result/genes.counts.matrix \</span><br><span class="line"> --method DESeq2 \</span><br><span class="line"> --samples_file ../data/samples.txt \</span><br><span class="line"> --contrasts contrasts.txt</span><br></pre></td></tr></table></figure>
<p>其中contrasts.txt：想要比对的组<br>.<img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645608157486-143f439c-7fb1-40e9-bfba-04f7045bdf80.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=88&id=uedff9a6c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=140&originWidth=192&originalType=binary&ratio=1&rotation=0&showTitle=false&size=5800&status=done&style=none&taskId=ufb082b1b-e58a-4881-877d-da7925859da&title=&width=121" alt="image.png"><br>/data/samples.txt 分组<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645608213166-d57943b9-f845-4ee0-bd55-26c2ea6544c7.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=287&id=u8c055c4d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=573&originWidth=240&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20086&status=done&style=none&taskId=u8ae12291-21a3-460f-b9cc-e81b31d67ff&title=&width=120" alt="image.png"></p>
<p>生成总的文件<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645608275838-4721ffd8-6038-4f32-be1a-e1817b028097.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=173&id=u41936d74&margin=%5Bobject%20Object%5D&name=image.png&originHeight=345&originWidth=859&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63116&status=done&style=none&taskId=ud887461d-c7a8-4c27-8e90-c1153d8d525&title=&width=429.5" alt="image.png"><br>genes.counts.matrix.KID_S1_vs_BLO_S1.DESeq2.DE_results<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645608292683-3273c9eb-8e44-4c83-957b-90263808f126.png#clientId=uaa97830e-ef93-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=200&id=ueabd5703&margin=%5Bobject%20Object%5D&name=image.png&originHeight=399&originWidth=1541&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106890&status=done&style=none&taskId=u6e2af944-477b-4ff1-aacd-6a3bab568fa&title=&width=770.5" alt="image.png"></p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
        <category>生信流程分析</category>
        <category>转录组</category>
      </categories>
  </entry>
  <entry>
    <title>第五天-基因家族分析</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E7%AC%AC%E4%BA%94%E5%A4%A9-%E5%9F%BA%E5%9B%A0%E5%AE%B6%E6%97%8F/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />


<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645603572998-6974dafe-2a23-41ea-9ae5-4f19dfb0a082.png#clientId=u27bf0efa-4922-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=319&id=u4c7193bc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=989&originWidth=1076&originalType=binary&ratio=1&rotation=0&showTitle=false&size=149790&status=done&style=none&taskId=uc7896d6a-b3dd-4e7f-bf4a-796047e3bb4&title=&width=347" alt="image.png"></p>
<blockquote>
<p>准备参考基因序列<br>准备大豆和芝麻的蛋白序列<br>将大豆、拟南芥、芝麻三个fasta合并成all.fasta:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat sind.fasta gmax.fasta atha.fasta &gt; ../all.fasta</span><br></pre></td></tr></table></figure>
<h3 id="第一步-blast数据库构建："><a href="#第一步-blast数据库构建：" class="headerlink" title="第一步 blast数据库构建："></a>第一步 blast数据库构建：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">makeblastdb -dbtype prot -in all.fasta -out all</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(-dbtype: 数据库类型 -dbtype &lt;String, `nucl&#x27;, `prot&#x27;&gt;</span><br><span class="line">-in 输入文件</span><br><span class="line">-out 输出文件</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>将生成 all.phr all.pin all.psq 文件</p>
<h3 id="第二步-比对"><a href="#第二步-比对" class="headerlink" title="第二步 比对"></a>第二步 比对</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">blastp -query query.fasta -db all -out blast.out -evalue 1e-10 -outfmt 7</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">( -query: 查询序列</span><br><span class="line"> -db：数据库</span><br><span class="line">-out : 输出文件</span><br><span class="line"> -evalue （E值）</span><br><span class="line">-outfmt 输出格式类型，越小越详细，设为7时方便写程序解读</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>(比对文件的每列表头 query acc., subject acc., % identity, alignment length, mismatches, gap opens, q. start, q. end, s. start, s. end, evalue, bit score)<br>(blast 为局部比对)</p>
<p>生成 blast.out</p>
<h3 id="第三步-过滤结果"><a href="#第三步-过滤结果" class="headerlink" title="第三步 过滤结果"></a>第三步 过滤结果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -v &#x27;#&#x27; blast.out | awk &#x27;$3&gt;50 &amp;&amp; $11&lt;1e-30&#123;print $2&#125;&#x27; | sort | uniq &gt;protein-ids.txt</span><br></pre></td></tr></table></figure>
<h3 id="第四步-提取蛋白序列"><a href="#第四步-提取蛋白序列" class="headerlink" title="第四步 提取蛋白序列"></a>第四步 提取蛋白序列</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">seqtk subseq all.fasta protein-ids.txt &gt; result.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">seqtk subseq使用说明：</span><br><span class="line">Usage: seqtk subseq [options] &lt;in.fa&gt; &lt;in.bed&gt;|&lt;name.list&gt;</span><br><span class="line"></span><br><span class="line">Options: -t TAB delimited output</span><br><span class="line"> -l INT sequence line length [0]</span><br><span class="line">Note: Use &#x27;samtools faidx&#x27; if only a few regions are intended.</span><br><span class="line">（seqtk开发者 ： 生信 李恒）</span><br></pre></td></tr></table></figure>
<h3 id="最后一步："><a href="#最后一步：" class="headerlink" title="最后一步："></a>最后一步：</h3><blockquote>
<p>在Windows下用MEGA画系统进化树</p>
</blockquote>
<p>将result.fasta拖进mega，选择align，在alignment下选 muscle，进行多序列比对<br>在 data选 phylogenetic analysis<br>最后回到主页 选 phylogenetic 画树,最后美化。<br>​</p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
        <category>生信流程分析</category>
        <category>基因家族</category>
      </categories>
  </entry>
  <entry>
    <title>基因课-15天入门-转录组-文献</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E8%BD%AC%E5%BD%95%E7%BB%84-%E6%96%87%E7%8C%AE/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<blockquote>
<p><a href="https://academic.oup.com/jxb/article/66/22/7359/2893295">Transcriptome analysis of an apple (Malus × domestica) yellow fruit somatic mutation identifies a gene network module highly associated with anthocyanin and epigenetic regulation | Journal of Experimental Botany | Oxford Academic (oup.com)</a></p>
</blockquote>
<p>例如，这些花青素生物合成基因的直接调控因子MBW的上游调控信号的性质</p>
<hr>
<p>反式作用因子是转录模板上游基因编码的一类蛋白调节因子，包括激活因子和阻遏因子等，它们与顺式作用元件中的上游激活序列特异性结合，对真核生物基因的转录分别起促进和阻遏作用</p>
<hr>
<p>顺式作用元件（cis-acting element）存在于基因旁侧序列中能影响基因表达的序列。顺式作用元件包括启动子、增强子、调控序列和可诱导元件等，它们的作用是参与基因表达的调控。顺式作用元件本身不编码任何蛋白质，仅仅提供一个作用位点，要与反式作用因子相互作用而起作用</p>
<h2 id="为了确定KID和BLO之间的亲本关系和运动关系，用16个SSR标记-补充表S1-对3棵独立嫁接的富士株系进行了遗传指纹分析"><a href="#为了确定KID和BLO之间的亲本关系和运动关系，用16个SSR标记-补充表S1-对3棵独立嫁接的富士株系进行了遗传指纹分析" class="headerlink" title="为了确定KID和BLO之间的亲本关系和运动关系，用16个SSR标记(补充表S1)对3棵独立嫁接的富士株系进行了遗传指纹分析"></a>为了确定KID和BLO之间的亲本关系和运动关系，用16个SSR标记(补充表S1)对3棵独立嫁接的富士株系进行了遗传指纹分析</h2><p>Simple Sequence Repeats 简单重复序列</p>
<p>真核生物基因组中存在大量重复频率极高而顺序复杂性极低的串联重复序列。按重复基序的长度可将串联重复序列分为<a href="https://baike.baidu.com/item/%E5%8D%AB%E6%98%9FDNA/3764240">卫星DNA</a>（基序100-300bp）、<a href="https://baike.baidu.com/item/%E5%B0%8F%E5%8D%AB%E6%98%9FDNA/5615450">小卫星DNA</a>（基序10-60bp）、<a href="https://baike.baidu.com/item/%E5%BE%AE%E5%8D%AB%E6%98%9FDNA/6634990">微卫星DNA</a>（基序1-6bp）。和中卫星DNA（由不同大小串联重复组成）等。微卫星是由DNA复制或修复过程中DNA滑动和错配或者有丝分裂、减数分裂期姐妹染色单体不均等交换引起的。微卫星的突变率在不同物种、同一物种的不同位点或同一位点的不同等位基因间存在很大差异。尽管微卫星 DNA分布于整个基因组的不同位置，但其两端序列多是保守的单拷贝序列，根据这两端的序列设计一对特异引物，通过PCR技术将期间的核心微卫星DNA序列扩增出来，利用电泳分析技术就可以得到其长度的多态性，此即 <a href="https://baike.baidu.com/item/SSR%E6%A0%87%E8%AE%B0/10789119">SSR标记</a>的原理。</p>
<hr>
<hr>
<hr>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
        <category>生信流程分析</category>
        <category>转录组</category>
      </categories>
  </entry>
  <entry>
    <title>基因课-15天入门-转录组-其他问题</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E8%BD%AC%E5%BD%95%E7%BB%84-%E5%85%B6%E4%BB%96%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h3 id="1-conda-包被污染"><a href="#1-conda-包被污染" class="headerlink" title="1.conda 包被污染"></a>1.conda 包被污染</h3><p>输入R后不能进去<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618310651-d6cf3b77-649d-4e57-9590-6ec616561a8b.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=89&id=u2b37a574&margin=%5Bobject%20Object%5D&name=image.png&originHeight=132&originWidth=623&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10949&status=done&style=none&taskId=u968fa2a2-1522-42ec-9122-8c5a8b91eb2&title=&width=418.5" alt="image.png"><br>发现安装trinity后，把R的脚本改为了链接<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618344786-5edced37-add3-4e43-bcb1-6bbd7c2f7910.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=82&id=u9652d001&margin=%5Bobject%20Object%5D&name=image.png&originHeight=164&originWidth=1493&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39476&status=done&style=none&taskId=ud3f353db-0743-49cc-9211-3b483a1ca19&title=&width=746.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618384441-ad3f160d-6464-4c75-a87a-73e4828d368e.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=78&id=u37c599e1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=115&originWidth=841&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19143&status=done&style=none&taskId=ub9382551-263f-4174-a5cb-cbaa29813a9&title=&width=571.5" alt="image.png"><br>之后，再conda一个环境，重新装R，把R的文件复制到miniconda3/bin/R 即可</p>
<hr>
<p>经测试，发现<strong>不可</strong>。复制过去的R打开的是那个环境的R，还需要<strong>改路径</strong>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s@envs/R/@@&#x27; R</span><br></pre></td></tr></table></figure>
<h3 id="2-原始文件下载的特别慢"><a href="#2-原始文件下载的特别慢" class="headerlink" title="2.原始文件下载的特别慢"></a>2.原始文件下载的特别慢</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install sra-tools</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618557725-b95990ef-39f8-42aa-8e46-2eb5ead9ab45.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=225&id=uf628fc07&margin=%5Bobject%20Object%5D&name=image.png&originHeight=450&originWidth=407&originalType=binary&ratio=1&rotation=0&showTitle=false&size=104389&status=done&style=none&taskId=u3ae0a4ed-0861-42c3-af4d-7c0393ce05d&title=&width=203.5" alt="image.png"><br>批量下载<br>prefetch SRR*** 下载的是*.sra</p>
<hr>
<p>**但是 **在服务器上用prefetch下载srr特别的慢慢</p>
<hr>
<p>最后用embl下载。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618588255-2be1db8b-d343-4525-981e-54f083d12d2f.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=180&id=u9c59464e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=360&originWidth=1550&originalType=binary&ratio=1&rotation=0&showTitle=false&size=64724&status=done&style=none&taskId=uc1314b8d-cfee-4a13-90fe-daaead8136c&title=&width=775" alt="image.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR217/002/SRR2176372/SRR2176372.fastq.gz</span><br></pre></td></tr></table></figure>


<blockquote>
<p>embl可以下载srr和fastq格式，更改 002/SRR2176372/SRR2176372<br>002的2为SRR最后一位</p>
</blockquote>
<h3 id="3-其他"><a href="#3-其他" class="headerlink" title="3.其他"></a>3.其他</h3><ol>
<li>Chrome打开ftp：把”ftp”开头的网址修改为”http”开头的网址，即可顺利访问</li>
<li>shell并行下载 用（）&amp;</li>
<li>重命名 </li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618760168-ba3129b7-6ab6-4bd7-994d-6ff182facd1e.png#clientId=ub0a49814-8ade-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=124&id=u5dbc8dc8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=564&originalType=binary&ratio=1&rotation=0&showTitle=false&size=29774&status=done&style=none&taskId=u6300fe13-5890-45c9-81e4-e7155e23cd4&title=&width=282" alt="image.png"></p>
<ol start="4">
<li>less 查看多个文件</li>
</ol>
<p><em>:n - 浏览下一个文件 :p - 浏览前一个文件</em></p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
        <category>生信流程分析</category>
        <category>转录组</category>
      </categories>
  </entry>
  <entry>
    <title>基因课-15天入门-转录组-14天功能富集</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE-15%E5%A4%A9%E5%85%A5%E9%97%A8-%E8%BD%AC%E5%BD%95%E7%BB%84-14%E5%A4%A9%E5%8A%9F%E8%83%BD%E5%AF%8C%E9%9B%86/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />
### go功能富集


<blockquote>
<p>Gene Ontology（GO）中最基本的概念是term。GO里面的每一个entry都有一个唯一的数字标记，形如GO:nnnnnnn，还有一个term名，比如”cell”, “fibroblast growth factor receptor binding”，或者”signal transduction”。每个term都属于一个ontology，总共有三个ontology，它们分别是</p>
</blockquote>
<blockquote>
<ol>
<li>细胞成分：细胞的部分或其细胞外环境;</li>
<li>分子功能：基因产物在分子水平上的元素活性，例如结合或催化;</li>
<li>生物过程：具有确定开始和结束的分子事件的操作或集合，与综合生活单元的功能有关</li>
</ol>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BiocManager::install(&#x27;clusterProfiler&#x27;)</span><br></pre></td></tr></table></figure>


<p>输入文件：de_result_apple.tsv （差异表达的kid-s1_vs_kid-s4）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645618930820-87e900de-8bf8-4c13-a54c-367ce36d9856.png#clientId=ufa61746c-4235-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=174&id=ud3eb90c6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=348&originWidth=497&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27825&status=done&style=none&taskId=udf45af4d-6aac-493f-8157-1a4a6cc69fd&title=&width=248.5" alt="image.png"></p>
<p>query_seqs.fa.emapper.annotations<br>（用蛋白序列在<a href="http://eggnog5.embl.de/#/app/home">http://eggnog5.embl.de/#/app/home</a>做的注释文件）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645619043353-1be3fa83-7e46-4c71-b393-3684a5e3c610.png#clientId=ufa61746c-4235-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=190&id=u2f7e516e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=379&originWidth=1000&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49268&status=done&style=none&taskId=ub7bbdcd4-35fd-4990-97d9-a45f7f2ff91&title=&width=500" alt="image.png"></p>
<hr>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码</span></span><br><span class="line"></span><br><span class="line">library(tidyverse)</span><br><span class="line">library(clusterProfiler)</span><br><span class="line"><span class="comment"># kid-s1_vs_kid-s4</span></span><br><span class="line">de_result &lt;- read.table(</span><br><span class="line"> file = <span class="string">&#x27;./de_result_apple.tsv&#x27;</span>,</span><br><span class="line"> header = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">emapper &lt;- read_delim(</span><br><span class="line"> file = <span class="string">&#x27;./query_seqs.fa.emapper.annotations&#x27;</span>,</span><br><span class="line"> <span class="string">&quot;\t&quot;</span>, escape_double = <span class="literal">FALSE</span>, col_names = <span class="literal">FALSE</span>,</span><br><span class="line"> comment = <span class="string">&quot;#&quot;</span>, trim_ws = <span class="literal">TRUE</span>) %&gt;%</span><br><span class="line"> dplyr::select(GID = X1, </span><br><span class="line"> Gene_Symbol = X6, </span><br><span class="line"> GO = X7, </span><br><span class="line"> KO = X9, </span><br><span class="line"> Pathway = X10, </span><br><span class="line"> OG = X21, </span><br><span class="line"> Gene_Name = X22)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gene &lt;- filter(de_result, </span><br><span class="line"> <span class="built_in">abs</span>(log2FoldChange) &gt; <span class="number">2</span> &amp; padj &lt; <span class="number">0.01</span>) %&gt;%</span><br><span class="line"> pull(id)</span><br></pre></td></tr></table></figure>



<hr>
<p><strong>构建 OrgDB</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个文件夹</span></span><br><span class="line">dir.create(<span class="string">&#x27;R_Library&#x27;</span>, recursive = <span class="built_in">T</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将包安装在该文件夹下</span></span><br><span class="line">install.packages(<span class="string">&#x27;./org.My.eg.db_1.0.tar.gz&#x27;</span>, </span><br><span class="line"> repos = <span class="literal">NULL</span>, <span class="comment">#从本地安装</span></span><br><span class="line"> lib = <span class="string">&#x27;R_Library&#x27;</span>) <span class="comment"># 安装文件夹</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载 OrgDB</span></span><br><span class="line">library(org.My.eg.db, lib = <span class="string">&#x27;R_Library&#x27;</span>)</span><br></pre></td></tr></table></figure>


<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 富集分析</span></span><br><span class="line">de_ego &lt;- enrichGO(gene = gene,</span><br><span class="line"> OrgDb = org.My.eg.db,</span><br><span class="line"> keyType = <span class="string">&#x27;GID&#x27;</span>,</span><br><span class="line"> ont = <span class="string">&#x27;BP&#x27;</span>,</span><br><span class="line"> qvalueCutoff = <span class="number">0.05</span>,</span><br><span class="line"> pvalueCutoff = <span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">de_ego_df &lt;- as.data.frame(de_ego)</span><br><span class="line">head(de_ego_df)</span><br></pre></td></tr></table></figure>


<h3 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h3><hr>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 可视化</span></span><br><span class="line">barplot(de_ego, showCategory = <span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645619206535-48fa47b2-a92a-421e-871f-1e8ca3ab5e52.png#clientId=ufa61746c-4235-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=u9a44a688&margin=%5Bobject%20Object%5D&name=image.png&originHeight=539&originWidth=801&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124940&status=done&style=none&taskId=u881c6276-084f-41fb-a818-676866cced9&title=&width=400.5" alt="image.png"></p>
<hr>
<p>enrichplot::dotplot(de_ego, showCategory = 10)<br><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645619264882-38cd4125-5014-48a1-9f12-efac321a6e90.png#clientId=ufa61746c-4235-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=256&id=uee8b84e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=512&originWidth=794&originalType=binary&ratio=1&rotation=0&showTitle=false&size=136612&status=done&style=none&taskId=u5dc4cfde-0706-43eb-a179-70424a02b19&title=&width=397" alt="image.png"></p>
<p>cnetplot(de_ego,<br> foldChange = geneList,<br> showCategory = 5,<br> node_label = “all”, # category | gene | all | none<br> circular = TRUE,<br> colorEdge = TRUE)</p>
<h3 id="可视化-1"><a href="#可视化-1" class="headerlink" title="可视化"></a>可视化</h3><hr>
<p>barplot(de_ego, showCategory = 10)</p>
<hr>
<h2 id="enrichplot-dotplot-de-ego-showCategory-10"><a href="#enrichplot-dotplot-de-ego-showCategory-10" class="headerlink" title="enrichplot::dotplot(de_ego, showCategory = 10) "></a>enrichplot::dotplot(de_ego, showCategory = 10) </h2><h3 id="基因差异向量（geneList）"><a href="#基因差异向量（geneList）" class="headerlink" title="基因差异向量（geneList）"></a>基因差异向量（geneList）</h3><h1 id="一个有名向量，记录差异大小，名字为基因ID，值为-logFC，按-logFC-降序排列。"><a href="#一个有名向量，记录差异大小，名字为基因ID，值为-logFC，按-logFC-降序排列。" class="headerlink" title="一个有名向量，记录差异大小，名字为基因ID，值为 logFC，按 logFC 降序排列。"></a>一个有名向量，记录差异大小，名字为基因ID，值为 logFC，按 logFC 降序排列。</h1><p>geneList &lt;- de_result$log2FoldChange<br>names(geneList) &lt;- de_result$id<br>geneList &lt;- sort(geneList, decreasing = T)</p>
<p>cnetplot(de_ego,<br> foldChange = geneList,<br> showCategory = 5,<br> node_label = “all”, # category | gene | all | none<br> circular = TRUE,<br> colorEdge = TRUE)</p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
        <category>生信流程分析</category>
        <category>go富集</category>
      </categories>
  </entry>
  <entry>
    <title>hexo</title>
    <url>/2022/02/23/hexo/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h2 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="1.基本操作"></a>1.基本操作</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul>
<li><p><strong>清除缓存：</strong>hexo clean</p>
</li>
<li><p><strong>生成静态文件：</strong>hexo generate可简写为 hexo g</p>
</li>
<li><p><strong>启动服务器：</strong>hexo server或者 hexo s 常用参数：-p（–port）重设端口</p>
</li>
<li><p><strong>部署：</strong>hexo deploy可简写为hexo d，用于将网站部署到服务器上。（暂时用不到，目前都是在本地，后面我们将博客托管到GitHub Pages或Gitee Pages时才会用到此命令）<br>常用参数：-g（–generate），hexo d -g部署前预先生成静态文件，等同于 hexo g -d</p>
</li>
</ul>
<p><strong>一般发布文章或者修改博客后需要这些操作：</strong>清除缓存&gt;生成静态文件&gt;启动服务器，测试没问题后再部署。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// 我们可以写成一条命令</span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure>
<h3 id="为文章添加多个分类"><a href="#为文章添加多个分类" class="headerlink" title="为文章添加多个分类"></a>为文章添加多个分类</h3><p>1）下面文章属于三个分类：日常 &gt; 生活，日常 &gt; 随想，日记<br>2）其中生活、随想为日常的子分类，日常和日记为同级分类</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">categories: </span><br><span class="line">- [日常, 生活]</span><br><span class="line">- [日常, 随想]</span><br><span class="line">- [日记]</span><br></pre></td></tr></table></figure>




<h3 id="2-文章模板设置"><a href="#2-文章模板设置" class="headerlink" title="2.文章模板设置"></a>2.文章模板设置</h3><blockquote>
<p>每次使用hexo new post “post-name”新建一片文章时，只有title date tags，<br>还要手动增加 categories</p>
</blockquote>
<p>可以修改修改了scaffolds中的post模板。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">- []</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="3-图片无法显示"><a href="#3-图片无法显示" class="headerlink" title="3.图片无法显示"></a>3.图片无法显示</h3><blockquote>
<p>语雀转成md文件导出，图片无法正常显示</p>
</blockquote>
<p>当你使用hexo上传博客时，在md文件中加上meta标签即可保证图片都能正常显示，标签如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客</category>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>基因课15天入门生物信息总述</title>
    <url>/2022/02/23/%E5%9F%BA%E5%9B%A0%E8%AF%BE15%E5%A4%A9%E5%85%A5%E9%97%A8%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E6%80%BB%E8%BF%B0/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<blockquote>
<p>官网视频：<a href="https://genek-pc.duanshu.com/course/detail/455dbc620a5242fd800dfdc508d978b7">genek.cn</a><br>b站：<a href="https://www.bilibili.com/video/BV1K44y1B7Dg">https://www.bilibili.com/video/BV1K44y1B7Dg</a></p>
</blockquote>
<h3 id="第一天-测序原理"><a href="#第一天-测序原理" class="headerlink" title="第一天 测序原理"></a>第一天 测序原理</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645603138118-b3e5d773-3a0e-4bdf-9968-61a1ab1a01b1.png#clientId=u207c1384-888b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=248&id=u141e023a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=528&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65730&status=done&style=none&taskId=u229641e0-a56b-4483-ac46-3b58e878497&title=&width=529" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645603159789-b2771f37-49f5-4c1f-a6d4-96344a056f32.png#clientId=u207c1384-888b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=u4569556a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=292&originWidth=553&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114333&status=done&style=none&taskId=ud03b4e0b-4871-45d2-8b09-0730d851654&title=&width=510.5" alt="image.png"></p>
<blockquote>
<p>前半部分：标准化分析，在linux              后半部分：个性化分析，在Windows</p>
</blockquote>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="第二天-linux介绍与虚拟机安装"><a href="#第二天-linux介绍与虚拟机安装" class="headerlink" title="第二天 linux介绍与虚拟机安装"></a>第二天 linux介绍与虚拟机安装</h3><h3 id="第三天-linux基础命令"><a href="#第三天-linux基础命令" class="headerlink" title="第三天 linux基础命令"></a>第三天 linux基础命令</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26124263/1645603376812-ab377dc2-d834-450d-b062-33c4212ce0ec.png#clientId=u207c1384-888b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=1566&id=u2e5030b9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=3132&originWidth=4512&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1061387&status=done&style=none&taskId=u5b0b0880-4375-4ded-b6c4-55984f582b3&title=&width=2256" alt="image.png"></p>
]]></content>
      <categories>
        <category>生信</category>
        <category>基因课</category>
      </categories>
  </entry>
</search>
